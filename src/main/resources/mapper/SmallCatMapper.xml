<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.swyp.weddy.domain.checklist.dao.SmallCatMapper">

    <!-- 프리뷰 컬럼 조회 -->
    <select id="selectItemPreviews" resultType="org.swyp.weddy.domain.checklist.entity.SmallCatItemPreview">
        SELECT small.id, small.large_category_item_id, small.title, small.due_date, assignee.name, status.name "status_name", small.sequence
          FROM small_category_item small
          JOIN large_category_item large ON small.large_category_item_id = large.id
          JOIN checklist ON large.checklist_id = checklist.id
     LEFT JOIN small_category_item_assignee assignee ON small.assignee_id = assignee.id
     LEFT JOIN small_category_item_status status ON small.status_id = status.id
         WHERE checklist.id = #{checklistId}
           AND large.id = #{largeCatItemId}
           AND small.is_deleted = false
      ORDER BY small.sequence ASC;
    </select>

    <!-- 모든 컬럼 조회 -->
    <select id="selectItem" resultType="org.swyp.weddy.domain.checklist.entity.SmallCatItem">
        SELECT small.id, small.large_category_item_id, small.title, small.due_date, assignee.name, small.body, status.name "status_name", small.amount, small.sequence
          FROM small_category_item small
          JOIN large_category_item large ON small.large_category_item_id = large.id
          JOIN checklist ON large.checklist_id = checklist.id
     LEFT JOIN small_category_item_assignee assignee ON small.assignee_id = assignee.id
     LEFT JOIN small_category_item_status status ON small.status_id = status.id
         WHERE checklist.id = #{checklistId}
           AND large.id = #{largeCatItemId}
           AND small.id = #{smallCatItemId}
           AND small.is_deleted = false;
    </select>

    <!-- 항목 추가 -->
    <insert id="insertItem" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO small_category_item
        (large_category_item_id, title, due_date, assignee_id, body, status_id, amount, created_at, updated_at, is_deleted)
        VALUES
        ( #{largeCatItemId}, #{title}, #{dueDate}, (SELECT id FROM small_category_item_assignee WHERE name = #{assigneeName}), #{body}, (SELECT id FROM small_category_item_status WHERE name = #{statusName}), #{amount}, NOW(), NOW(), false );
    </insert>


    <!-- 항목 수정 -->
    <update id="updateItem">
        UPDATE small_category_item
           SET title = #{title},
               due_date = #{dueDate},
               assignee_id = (SELECT id FROM small_category_item_assignee WHERE name = #{assigneeName}),
               body = #{body},
               status_id = (SELECT id FROM small_category_item_status WHERE name = #{statusName}),
               amount = #{amount},
               updated_at = NOW()
         WHERE id = #{id}
           AND large_category_item_id = #{largeCatItemId}
           AND is_deleted = false;
    </update>

    <!-- 항목 한 개 삭제 (소프트 삭제) -->
    <update id="deleteItem">
        UPDATE small_category_item
           SET is_deleted = true,
               updated_at = NOW()
         WHERE id = #{smallCatItemId}
           AND large_category_item_id =  #{largeCatItemId};
    </update>

    <!-- 항목 모두 삭제 (소프트 삭제) -->
    <update id="deleteAllItems">
        UPDATE small_category_item
           SET is_deleted = true,
               updated_at = NOW()
         WHERE large_category_item_id = #{largeCatItemId};
    </update>

    <!-- 항목 이동 -->
    <update id="moveItem" parameterType="org.swyp.weddy.domain.checklist.entity.SmallCatItem">
        UPDATE small_category_item
           SET sequence = #{sequence},
               large_category_item_id = #{largeCatItemId},
               updated_at = NOW()
         WHERE id = #{id};
    </update>

    <select id="selectItemPreviewsByStatus" resultType="org.swyp.weddy.domain.checklist.entity.SmallCatItemPreview">
        SELECT small.id,
               small.large_category_item_id,
               small.title,
               small.due_date,
               assignee.name,
               status.name "status_name",
               small.sequence
        FROM small_category_item small
                 JOIN large_category_item large ON small.large_category_item_id = large.id
                 JOIN checklist ON large.checklist_id = checklist.id
                 LEFT JOIN small_category_item_assignee assignee ON small.assignee_id = assignee.id
                 LEFT JOIN small_category_item_status status ON small.status_id = status.id
        WHERE checklist.id = #{checklistId}
          AND large.id = #{largeCatItemId}
          AND status.name IN
        <foreach collection="itemStatus" item="itemStatusElem" open="(" close=")" separator="," >
            #{itemStatusElem}
        </foreach>
        AND small.is_deleted = false;
    </select>
</mapper>
