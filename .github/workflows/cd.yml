name: CD Pipeline

on:
  push:
    branches:
      - issue-110

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. AWS CLI 및 도커 설정
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3. ECR 로그인 (ECR)
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # 4. 도커 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile-prod -t ${{ secrets.ECR_REGISTRY }}/weddy-server-docker:latest .
          docker push ${{ secrets.ECR_REGISTRY }}/weddy-server-docker:latest

      # 5. EC2에 SSH로 접속해 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/weddy-server-docker:latest
            docker compose -f /home/ubuntu/weddy-docker/compose.yml down
            docker compose -f /home/ubuntu/weddy-docker/compose.yml up -d